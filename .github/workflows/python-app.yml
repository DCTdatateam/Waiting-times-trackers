# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  schedule: 
    - cron: "45 13 * * TUE"
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions: write-all


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run diagnostic script
      continue-on-error: true
      run: |
        python 'py/diagnostic.py'
      env:
        key: ${{ secrets.key }} # if run.py requires passwords..etc, set it as secrets
        
    - name: Run CAHMS script
      run: |
        python 'py/CAHMS.py'
      env:
        key: ${{ secrets.key }} # if run.py requires passwords..etc, set it as secrets   
        
    - name: Run Drug and Alcohol script
      run: |
        python 'py/DrugAndAlcohol.py'
      env:
        key: ${{ secrets.key }} # if run.py requires passwords..etc, set it as secrets        
     
    - name: Run IVF script
      run: |
        python 'py/IVF.py'
      env:
        key: ${{ secrets.key }} # if run.py requires passwords..etc, set it as secrets
        
    - name: Run musculoskeletal script
      run: |
        python 'py/musculoskeletal.py'
      env:
        key: ${{ secrets.key }} # if run.py requires passwords..etc, set it as secrets
        
    - name: Run psychological therapies script
      run: |
        python 'py/psychologicaltherapies.py'
      env:
        key: ${{ secrets.key }} # if run.py requires passwords..etc, set it as secrets
        
    - name: Run cancer script
      run: |
        python 'py/cancer.py'
      env:
        key: ${{ secrets.key }} # if run.py requires passwords..etc, set it as secrets
        
    - name: commit files
      #continue-on-error: true
      run: |
        git config --local user.name actions-user
        git config --local user.email "actions@github.com"
        git add data/*
        git commit -m "GH ACTION Headlines $(date)"
        git push origin main
      env:
        REPO_KEY: ${{secrets.GITHUB_TOKEN}}
        username: github-actions

    - name: Test 
      run: |
        git config --local user.email "action@github.com"
         git config --local user.name "github-actions"
         git add --all
         if [ -z "$(git status --porcelain)" ]; then
            echo "::set-output name=push::false"
         else
            git commit -m "Add changes" -a
            echo "::set-output name=push::true"
         fi
      shell: bash
    - name: Push changes
      if: steps.commit.outputs.push == 'true'
      uses: ad-m/github-push-action@master
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

